import {
  require_react_dom
} from "./chunk-AAMKVMPP.js";
import {
  __toESM,
  require_react
} from "./chunk-3GDJK6CW.js";

// ../../../../node_modules/@astrojs/react/client-v17.js
var import_react2 = __toESM(require_react());
var import_react_dom = __toESM(require_react_dom());

// ../../../../node_modules/@astrojs/react/static-html.js
var import_react = __toESM(require_react(), 1);
var StaticHtml = ({ value, name, hydrate: hydrate2 = true }) => {
  if (!value)
    return null;
  const tagName = hydrate2 ? "astro-slot" : "astro-static-slot";
  return (0, import_react.createElement)(tagName, {
    name,
    suppressHydrationWarning: true,
    dangerouslySetInnerHTML: { __html: value }
  });
};
StaticHtml.shouldComponentUpdate = () => false;
var static_html_default = StaticHtml;

// ../../../../node_modules/@astrojs/react/client-v17.js
var client_v17_default = (element) => (Component, props, { default: children, ...slotted }, { client }) => {
  for (const [key, value] of Object.entries(slotted)) {
    props[key] = (0, import_react2.createElement)(static_html_default, { value, name: key });
  }
  const componentEl = (0, import_react2.createElement)(
    Component,
    props,
    children != null ? (0, import_react2.createElement)(static_html_default, { value: children }) : children
  );
  const isHydrate = client !== "only";
  const bootstrap = isHydrate ? import_react_dom.hydrate : import_react_dom.render;
  bootstrap(componentEl, element);
  element.addEventListener("astro:unmount", () => (0, import_react_dom.unmountComponentAtNode)(element), {
    once: true
  });
};
export {
  client_v17_default as default
};
//# sourceMappingURL=@astrojs_react_client-v17__js.js.map
